# File: .github/workflows/upload_cleaned_to_gcs.yml
# -----------------------------------------------
# Purpose: Automates the upload of cleaned CSV files to a GCS bucket
# Triggered either manually or automatically when relevant files change
# -----------------------------------------------

    name: Upload Cleaned CSVs to GCS  # Name shown in GitHub Actions UI

    on:
      workflow_dispatch:  # üîò Allows manual triggering of the workflow from GitHub UI
      push:               # üîÅ Automatically triggers on commits that affect:
        paths:
          - "data/clean/**"                    # ‚ñ∂Ô∏è Any file under data/clean/ (i.e., new/updated cleaned CSVs)
          - "scripts/upload_cleaned_data_to_gcs.py"  # ‚ñ∂Ô∏è Or changes to the Python upload script
    
    jobs:
      upload:             # üß± Name of the job
        runs-on: ubuntu-latest  # üñ•Ô∏è GitHub-hosted Ubuntu environment for this job
    
        steps:  # ‚úÖ Sequence of steps to run inside the job
          - name: Checkout code
            uses: actions/checkout@v3
            # üì• Clones the repo so that the workflow has access to your scripts and data folder
    
          - name: Set up Python
            uses: actions/setup-python@v4
            with:
              python-version: "3.10"
            # üêç Sets up a Python 3.10 environment in the runner
    
          - name: Install dependencies
            run: |
              python -m pip install --upgrade pip
              pip install -r requirements.txt
            # üì¶ Installs required Python packages listed in your requirements.txt
            # Make sure your requirements.txt includes google-cloud-storage and python-dotenv
    
          - name: Write GCP credentials to file
            run: |
              echo '${{ secrets.GCP_CREDENTIALS_JSON }}' > gcp_creds.json
            # üîê Writes the GCP service account key (stored securely as a GitHub secret) to a JSON file
            # This file will be read by the Python script to authenticate with GCP
    
          - name: Run uploader script to GCS
            run: python scripts/upload_cleaned_data_to_gcs.py
            env:
              GOOGLE_APPLICATION_CREDENTIALS: gcp_creds.json
              GCS_BUCKET_NAME: housing-bubble-predictor-data
            # üöÄ Executes your Python script to upload cleaned CSVs from local folder to GCS bucket
            # Sets environment variables:
            # - GOOGLE_APPLICATION_CREDENTIALS: for GCP auth using the just-created JSON file
            # - GCS_BUCKET_NAME: optionally passed if your Python script uses it via os.getenv()